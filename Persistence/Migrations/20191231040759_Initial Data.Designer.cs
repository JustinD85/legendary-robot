// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191231040759_Initial Data")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Domain.Interfaces.AActor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AActor");
                });

            modelBuilder.Entity("Domain.Value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("Domain.Concrete.Building", b =>
                {
                    b.HasBaseType("Domain.Interfaces.AActor");

                    b.HasDiscriminator().HasValue("Building");
                });

            modelBuilder.Entity("Domain.Concrete.Item", b =>
                {
                    b.HasBaseType("Domain.Interfaces.AActor");

                    b.Property<Guid?>("PawnId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PawnId");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("Domain.Concrete.Pawn", b =>
                {
                    b.HasBaseType("Domain.Interfaces.AActor");

                    b.Property<int>("AC")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Pawn");
                });

            modelBuilder.Entity("Domain.Potion", b =>
                {
                    b.HasBaseType("Domain.Concrete.Item");

                    b.HasDiscriminator().HasValue("Potion");
                });

            modelBuilder.Entity("Domain.Concrete.Item", b =>
                {
                    b.HasOne("Domain.Concrete.Pawn", null)
                        .WithMany("Items")
                        .HasForeignKey("PawnId");
                });
#pragma warning restore 612, 618
        }
    }
}
